server.port=${PORT:0}
spring.application.name=users-ws

spring.config.import=optional:configserver:http://localhost:8012

# Eureka
eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=false
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
eureka.devtools.restart.enable = true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.instance.hostname=localhost

# H2 Database
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
#spring.datasource.url=jdbc:h2:mem:testdb
##spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.path=/h2-console
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true

# MySql
spring.jpa.hibernate.ddl-auto=update

# Gateway
gateway.ip = 192.168.2.81

# Spring Security #
# Millis seconds - 10 days
token.expiration_time=864000000
token.secret=klasdjfkaljds239012384adhjskdljlfkl
login.url.path=/users/login

# RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Spring actuator
management.endpoints.web.exposure.include=mappings

# Log
logging.level.com.appsdeveloperblog.photoapp.api.users.data.AlbumsServiceClient=DEBUG

# https://resilience4j.readme.io/docs/circuitbreaker
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.albums-ws.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10000ms
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10

# 3 attemps: 2nd attemp->2s after 1 attemp / 3rd attemp->10 seconds after 2nd attemp
resilience4j.retry.retry-aspect-order=2
resilience4j.retry.instances.albums-ws.max-attempts=3
resilience4j.retry.instances.albums-ws.wait-duration=2s
resilience4j.retry.instances.albums-ws.enable-exponential-backoff=true
resilience4j.retry.instances.albums-ws.exponential-backoff-multiplier=5

# Zipkin and Sleuth
spring.zipkin.base-url=http://localhost:9411
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1
